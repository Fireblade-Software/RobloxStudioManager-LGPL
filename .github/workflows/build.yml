name: Build RobloxStudioManager

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create cache directory
        run: mkdir -p ~/.cache/pip
      
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Modify FluentWidgets
        run: |
          $QFLUENT_PATH = python -c "import sys; sys.stdout = open('nul', 'w'); import qfluentwidgets; sys.stdout = sys.__stdout__;  print(qfluentwidgets.__path__[0])"
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/Firebladedoge229/PyQt-Fluent-Widgets/refs/heads/master/qfluentwidgets/common/config.py" -OutFile "$QFLUENT_PATH/common/config.py"

      - name: Install Nuitka
        run: |
          pip install nuitka

      - name: Download and set up Dependency Walker
        run: |
          Invoke-WebRequest -Uri "https://dependencywalker.com/depends22_x64.zip" -OutFile "depends.zip"
          Expand-Archive depends.zip -DestinationPath "$env:LOCALAPPDATA\Nuitka\Nuitka\Cache\downloads\depends\x86_64"

      - name: Download RCEdit
        run: |
          Invoke-WebRequest -Uri "https://github.com/electron/rcedit/releases/download/v0.1.0/rcedit.exe" -OutFile "rcedit.exe"

      - name: Build RobloxStudioManager
        run: |
          nuitka src/main.py \
            --standalone \
            --onefile \
            --windows-disable-console \
            --output-dir=build \
            --output-filename=RobloxStudioManager \
            --windows-icon-from-ico=images/logo.ico \
            --noinclude-default-mode=nofollow \
            --nofollow-imports \
            --enable-plugin=pyqt5 \
            --include-data-files="src/ui_components.py=ui_components.py" \
            --include-data-files="src/downloader.py=downloader.py" \
            --include-data-files="src/logic.py=logic.py" \
            --include-data-files="data/fastflags.json=fastflags.json" \
            --include-data-files="data/options.json=options.json" \
            --include-data-files="images/logo.png=logo.png" \
            --include-data-files="images/RobloxStudioManager.png=RobloxStudioManager.png" \
            --include-data-files="rcedit.exe=rcedit.exe"
      
      - name: Build RobloxStudioManagerDebug
        run: |
          nuitka src/main.py \
            --standalone \
            --onefile \
            --output-dir=build \
            --output-filename=RobloxStudioManagerDebug \
            --windows-icon-from-ico=images/logo.ico \
            --noinclude-default-mode=nofollow \
            --nofollow-imports \
            --enable-plugin=pyqt5 \
            --include-data-files="src/ui_components.py=ui_components.py" \
            --include-data-files="src/downloader.py=downloader.py" \
            --include-data-files="src/logic.py=logic.py" \
            --include-data-files="data/fastflags.json=fastflags.json" \
            --include-data-files="data/options.json=options.json" \
            --include-data-files="images/logo.png=logo.png" \
            --include-data-files="images/RobloxStudioManager.png=RobloxStudioManager.png" \
            --include-data-files="rcedit.exe=rcedit.exe"
            
      - name: Upload Production Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RobloxStudioManager
          path: "build/RobloxStudioManager.exe"

      - name: Upload Development Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RobloxStudioManagerDebug
          path: "build/RobloxStudioManagerDebug.exe"
